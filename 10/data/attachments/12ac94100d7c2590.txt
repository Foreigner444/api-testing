INFO     HTTP_LOGGER:event_hooks.py:17 Request: POST http://127.0.0.1:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:31 Response: 200 OK POST from http://127.0.0.1:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:17 Request: POST http://127.0.0.1:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:31 Response: 200 OK POST from http://127.0.0.1:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:17 Request: POST http://127.0.0.1:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:31 Response: 200 OK POST from http://127.0.0.1:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:17 Request: POST http://127.0.0.1:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:31 Response: 200 OK POST from http://127.0.0.1:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:17 Request: GET http://127.0.0.1:8000/api/v1/courses?userId=e1014ec8-f162-4a84-97b4-1ee82ff33561
INFO     HTTP_LOGGER:event_hooks.py:31 Response: 200 OK GET from http://127.0.0.1:8000/api/v1/courses?userId=e1014ec8-f162-4a84-97b4-1ee82ff33561
INFO     BASE_ASSERTIONS:base.py:15 Check that response status code equal to '200'.
INFO     COURSES_ASSERTION:courses.py:60 Verify get courses response
INFO     BASE_ASSERTIONS:base.py:56 Check that length of 'courses' equals to '1'.
INFO     BASE_ASSERTIONS:base.py:83 Verify that model 'CourseSchema' matches expected values for fields: id, title, max_score, min_score, description, preview_file, estimated_time, created_by_user_id
INFO     BASE_ASSERTIONS:base.py:87 Checking field: id
INFO     BASE_ASSERTIONS:base.py:31 Check that ''id'' field value equals to '473fbf8b-efdb-4dfd-8b7f-29e80ab249ee'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: title
INFO     BASE_ASSERTIONS:base.py:31 Check that ''title'' field value equals to 'Discussion task tax step.'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: max_score
INFO     BASE_ASSERTIONS:base.py:31 Check that ''max_score'' field value equals to '70'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: min_score
INFO     BASE_ASSERTIONS:base.py:31 Check that ''min_score'' field value equals to '18'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: description
INFO     BASE_ASSERTIONS:base.py:31 Check that ''description'' field value equals to 'Account down rest theory.'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: preview_file
INFO     BASE_ASSERTIONS:base.py:31 Check that ''preview_file'' field value equals to 'id='7f62a211-3600-4b8c-9c26-b323e50611ba' filename='86750dd3.png' directory='test' url=HttpUrl('http://localhost:8000/static/test/86750dd3.png')'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: estimated_time
INFO     BASE_ASSERTIONS:base.py:31 Check that ''estimated_time'' field value equals to '7 weeks'.
INFO     BASE_ASSERTIONS:base.py:87 Checking field: created_by_user_id
INFO     BASE_ASSERTIONS:base.py:31 Check that ''created_by_user_id'' field value equals to 'id='e1014ec8-f162-4a84-97b4-1ee82ff33561' email='ereed@example.com' last_name='Rice' first_name='Jesse' middle_name='James''.
INFO     SCHEMA_ASSERTION:schema.py:13 Validating JSON schema.